// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int                @id @default(autoincrement())
  email         String             @unique
  name          String
  password      String
  phone_number  String?
  created_at    DateTime           @default(now())
  updated_at    DateTime           @updatedAt
  type          String             @default("user")
  messages      Message[]
  conversations ConversationUser[]
  companies     Companies?         @relation(fields: [company_id], references: [id])
  company_id    Int?

  @@map("users")
}

model Message {
  id              String       @id @default(cuid())
  content         String
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt
  user_id         Int
  sent_at         DateTime
  user            User         @relation(fields: [user_id], references: [id])
  conversation    Conversation @relation(fields: [conversation_id], references: [id])
  conversation_id String
  type            String

  @@map("messages")
}

model Conversation {
  id         String             @id @default(cuid())
  created_at DateTime           @default(now())
  updated_at DateTime           @updatedAt
  messages   Message[]
  is_group   Boolean
  users      ConversationUser[]

  @@map("conversations")
}

model ConversationUser {
  id              Int          @id @default(autoincrement())
  user_id         Int
  conversation_id String
  joined_at       DateTime     @default(now())
  user            User         @relation(fields: [user_id], references: [id])
  conversation    Conversation @relation(fields: [conversation_id], references: [id])

  @@map("conversation_users")
}

model Companies {
  id         Int            @id @default(autoincrement())
  name       String
  email      String
  created_at DateTime       @default(now())
  updated_at DateTime       @updatedAt
  document   String
  users      User[]
  phones     CompanyPhone[]

  @@map("companies")
}

model CompanyPhone {
  id           Int       @id @default(autoincrement())
  phone_number String
  company_id   Int
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  company      Companies @relation(fields: [company_id], references: [id])

  @@map("company_phone")
}
